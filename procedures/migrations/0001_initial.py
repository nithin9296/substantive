# Generated by Django 2.0.8 on 2019-06-04 02:14

from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Client_Create',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_type', models.CharField(max_length=15)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_client', to='procedures.Client_Create')),
            ],
        ),
        migrations.CreateModel(
            name='Cycle_in_obj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Client')),
                ('cycle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Cycle')),
            ],
        ),
        migrations.CreateModel(
            name='DatafileModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', picklefield.fields.PickledObjectField(editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['updated', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='ICmatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(choices=[('True', 'True'), ('False', 'False')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='InternalControlTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_functions', models.CharField(max_length=50)),
                ('gl_accounts', models.CharField(max_length=50)),
                ('documents_records', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Mxcell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.CharField(max_length=1000)),
                ('value', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Objectives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_objective', models.CharField(max_length=100)),
                ('assessed_cr', models.CharField(choices=[('Med', 'Med'), ('Low', 'Low'), ('High', 'High')], max_length=20)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_objectives', to='procedures.Cycle_in_obj')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='procedures.Member')),
            ],
        ),
        migrations.CreateModel(
            name='samples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('samples', models.FileField(blank=True, null=True, upload_to='')),
                ('sampling_method', models.CharField(choices=[('Random', 'Random'), ('Condition', 'Condition'), ('Weights', 'Weights')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='sampling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Estimated_Population_Exception_Rate', models.IntegerField()),
                ('Tolerable_Exception_Rate', models.IntegerField()),
                ('Population_Size', models.IntegerField()),
                ('Suggested_Sample_Size', models.IntegerField()),
                ('Actual_Sample_Size', models.IntegerField()),
                ('Number_of_Exceptions', models.IntegerField()),
                ('Sample_Exception_Rate', models.IntegerField()),
                ('Computed_Upper_Exception_Rate', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Test_of_Controls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_procedures', models.CharField(max_length=150)),
                ('mxcell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Mxcell')),
            ],
        ),
        migrations.CreateModel(
            name='testing_of_controls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='')),
                ('defecient', models.CharField(choices=[('defecient', 'defecient')], max_length=8)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.DatafileModel')),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='XMLGraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('XMLGraph', models.TextField(null=True)),
                ('user', models.CharField(max_length=20)),
                ('title', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='procedures.Title')),
            ],
        ),
        migrations.AddField(
            model_name='sampling',
            name='control_procedures',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Test_of_Controls'),
        ),
        migrations.AddField(
            model_name='samples',
            name='Actual_Sample_Size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Actual_Sample_Size', to='procedures.Test_of_Controls'),
        ),
        migrations.AddField(
            model_name='samples',
            name='client_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Client'),
        ),
        migrations.AddField(
            model_name='samples',
            name='control_procedures',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Test_of_Controls'),
        ),
        migrations.AddField(
            model_name='samples',
            name='cycle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Cycle'),
        ),
        migrations.AddField(
            model_name='mxcell',
            name='objectives',
            field=models.ManyToManyField(to='procedures.Objectives'),
        ),
        migrations.AddField(
            model_name='member',
            name='XMLGraph',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='procedures.XMLGraph'),
        ),
        migrations.AddField(
            model_name='icmatrix',
            name='mxcell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Mxcell'),
        ),
        migrations.AddField(
            model_name='icmatrix',
            name='objectives',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procedures.Objectives'),
        ),
    ]
